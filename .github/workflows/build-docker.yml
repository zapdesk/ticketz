name: Create and publish multi-arch Docker images

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'release/**'
    tags:
      - 'v*.*.*'
env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ${{ github.repository_owner }}/ticketz-backend
  IMAGE_FRONTEND: ${{ github.repository_owner }}/ticketz-frontend

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get git info and setup version files
        run: |
          cat <<EOT > backend/src/gitinfo.ts
          export const GitInfo = {
              commitHash: "$(git rev-parse --short HEAD)",
              commitTimestamp: "$(date -u -d "$(git log -1 --format=%cI)" +'%Y-%m-%dT%H:%M:%SZ')",
              branchName: "$(git rev-parse --abbrev-ref HEAD)",
              tagName: "$(git describe --tags --abbrev=0 2>/dev/null)",
              buildTimestamp: "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          };
          EOT
          cat <<EOT > frontend/public/gitinfo.json
          {
              "commitHash": "$(git rev-parse --short HEAD)",
              "commitTimestamp": "$(date -u -d "$(git log -1 --format=%cI)" +'%Y-%m-%dT%H:%M:%SZ')",
              "branchName": "$(git rev-parse --abbrev-ref HEAD)",
              "tagName": "$(git describe --tags --abbrev=0 2>/dev/null)",
              "buildTimestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          }
          EOT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta Backend
        id: metabackend
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}
          labels: |
            org.opencontainers.image.title=ticketz-backend
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Docker meta Frontend
        id: metafrontend
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}
          labels: |
            org.opencontainers.image.title=ticketz-frontend
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push backend Docker image
        id: backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metabackend.outputs.tags }}
          labels: ${{ steps.metabackend.outputs.labels }}
          build-args: TICKETZ_REGISTRY_URL=${{secrets.TICKETZ_REGISTRY_URL}}

      - name: Build and push frontend Docker image
        id: frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metafrontend.outputs.tags }}
          labels: ${{ steps.metafrontend.outputs.labels }}
